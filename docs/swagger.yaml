basePath: /api
definitions:
  errors.PenguinError:
    properties:
      errorCode:
        type: string
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.Existence:
    properties:
      CN:
        $ref: '#/definitions/models.ServerExistence'
      JP:
        $ref: '#/definitions/models.ServerExistence'
      KR:
        $ref: '#/definitions/models.ServerExistence'
      US:
        $ref: '#/definitions/models.ServerExistence'
    required:
    - CN
    - JP
    - KR
    - US
    type: object
  models.I18nOptionalString:
    properties:
      en:
        type: string
      ja:
        type: string
      ko:
        type: string
      zh:
        type: string
    type: object
  models.I18nString:
    properties:
      en:
        type: string
      ja:
        type: string
      ko:
        type: string
      zh:
        type: string
    required:
    - en
    - ja
    - ko
    - zh
    type: object
  models.Keywords:
    properties:
      alias:
        $ref: '#/definitions/models.I18nOptionalString'
      pron:
        $ref: '#/definitions/models.I18nOptionalString'
    required:
    - alias
    - pron
    type: object
  models.PItem:
    properties:
      arkItemId:
        description: ArkItemID is the previously used, string form ID of the item.
        type: string
      existence:
        description: Existence is a map with server code as key and the existence
          of the item in that server as value.
        type: object
      group:
        description: Group is an identifier of what the item actually is. For example,
          both orirock and orirock cube would have the same group, `orirock`.
        type: string
      id:
        description: ID is the numerical ID of the item.
        type: integer
      keywords:
        description: Keywords is an arbitrary JSON object containing the keywords
          of the item, for optimizing the results of the frontend built-in search
          engine.
        type: object
      name:
        description: Name is a map with language code as key and the name of the item
          in that language as value.
        type: object
      rarity:
        type: integer
      sortId:
        description: SortID is the sort position of the item.
        type: integer
      sprite:
        description: Sprite describes the location of the item's sprite on the sprite
          image, in a form of Y:X.
        type: string
    type: object
  models.ServerExistence:
    properties:
      endTime:
        type: integer
      exist:
        type: boolean
      startTime:
        type: integer
    required:
    - exist
    type: object
host: localhost:9010
info:
  contact:
    email: alvissreimu@gmail.com
    name: AlvISs_Reimu
    url: https://github.com/AlvISsReimu
  description: This is the Penguin Statistics v3 API, re-designed to aim for lightweight
    on wire.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  title: Penguin Statistics API
  version: 3.0.0-alpha.1
paths:
  /v3/items/{itemId}:
    get:
      description: Gets an Item using the item's numerical ID
      parameters:
      - description: Numerical Item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.PItem'
            - properties:
                existence:
                  $ref: '#/definitions/models.Existence'
                keywords:
                  $ref: '#/definitions/models.Keywords'
                name:
                  $ref: '#/definitions/models.I18nString'
              type: object
        "400":
          description: Invalid or missing itemId. Notice that this shall be the **numerical
            ID** of the item, instead of the previously used string form **arkItemId**
            of the item.
          schema:
            $ref: '#/definitions/errors.PenguinError'
        "500":
          description: An unexpected error occurred
          schema:
            $ref: '#/definitions/errors.PenguinError'
      summary: Gets an Item using numerical ID
      tags:
      - Item
swagger: "2.0"
