{
    "swagger": "2.0",
    "info": {
        "description": "This is the Penguin Statistics v3 API, re-designed to aim for lightweight on wire.",
        "title": "Penguin Statistics API",
        "contact": {
            "name": "AlvISs_Reimu",
            "url": "https://github.com/AlvISsReimu",
            "email": "alvissreimu@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "3.0.0-alpha.1"
    },
    "host": "localhost:9010",
    "basePath": "/api",
    "paths": {
        "/v3/items/{itemId}": {
            "get": {
                "description": "Gets an Item using the item's numerical ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Gets an Item using numerical ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numerical Item ID",
                        "name": "itemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.PItem"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "existence": {
                                            "$ref": "#/definitions/models.Existence"
                                        },
                                        "keywords": {
                                            "$ref": "#/definitions/models.Keywords"
                                        },
                                        "name": {
                                            "$ref": "#/definitions/models.I18nString"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid or missing itemId. Notice that this shall be the **numerical ID** of the item, instead of the previously used string form **arkItemId** of the item.",
                        "schema": {
                            "$ref": "#/definitions/errors.PenguinError"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "schema": {
                            "$ref": "#/definitions/errors.PenguinError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.PenguinError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "models.Existence": {
            "type": "object",
            "required": [
                "CN",
                "JP",
                "KR",
                "US"
            ],
            "properties": {
                "CN": {
                    "$ref": "#/definitions/models.ServerExistence"
                },
                "JP": {
                    "$ref": "#/definitions/models.ServerExistence"
                },
                "KR": {
                    "$ref": "#/definitions/models.ServerExistence"
                },
                "US": {
                    "$ref": "#/definitions/models.ServerExistence"
                }
            }
        },
        "models.I18nOptionalString": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                },
                "ja": {
                    "type": "string"
                },
                "ko": {
                    "type": "string"
                },
                "zh": {
                    "type": "string"
                }
            }
        },
        "models.I18nString": {
            "type": "object",
            "required": [
                "en",
                "ja",
                "ko",
                "zh"
            ],
            "properties": {
                "en": {
                    "type": "string"
                },
                "ja": {
                    "type": "string"
                },
                "ko": {
                    "type": "string"
                },
                "zh": {
                    "type": "string"
                }
            }
        },
        "models.Keywords": {
            "type": "object",
            "required": [
                "alias",
                "pron"
            ],
            "properties": {
                "alias": {
                    "$ref": "#/definitions/models.I18nOptionalString"
                },
                "pron": {
                    "$ref": "#/definitions/models.I18nOptionalString"
                }
            }
        },
        "models.PItem": {
            "type": "object",
            "properties": {
                "arkItemId": {
                    "description": "ArkItemID is the previously used, string form ID of the item.",
                    "type": "string"
                },
                "existence": {
                    "description": "Existence is a map with server code as key and the existence of the item in that server as value.",
                    "type": "object"
                },
                "group": {
                    "description": "Group is an identifier of what the item actually is. For example, both orirock and orirock cube would have the same group, `orirock`.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the numerical ID of the item.",
                    "type": "integer"
                },
                "keywords": {
                    "description": "Keywords is an arbitrary JSON object containing the keywords of the item, for optimizing the results of the frontend built-in search engine.",
                    "type": "object"
                },
                "name": {
                    "description": "Name is a map with language code as key and the name of the item in that language as value.",
                    "type": "object"
                },
                "rarity": {
                    "type": "integer"
                },
                "sortId": {
                    "description": "SortID is the sort position of the item.",
                    "type": "integer"
                },
                "sprite": {
                    "description": "Sprite describes the location of the item's sprite on the sprite image, in a form of Y:X.",
                    "type": "string"
                }
            }
        },
        "models.ServerExistence": {
            "type": "object",
            "required": [
                "exist"
            ],
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "exist": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "integer"
                }
            }
        }
    }
}